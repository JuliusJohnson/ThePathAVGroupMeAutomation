from pprint import pprint
import sendGroupme
import sqlite3
from pprint import pprint
import sendEmail

conn = sqlite3.connect('/home/julius/Documents/python/projects/thepathDB/PlanningCenter')
connectionCursor = conn.cursor()

def getServiceOrder():
    serviceItems = []
    for row in connectionCursor.execute("SELECT ifnull(Title || ' | ' || Description || '(' || EstimatedTime || ')', title || ' (' || EstimatedTime || ')') AS Item FROM ( SELECT Title ,Description ,length ,Sequence ,length + ifnull(nextlength, 0) + ifnull(nextlength, 0) + ifnull(nextlength2, 0) + ifnull(nextlength3, 0) + ifnull(nextlength4, 0) + ifnull(nextlength5, 0) + ifnull(nextlength6, 0) + ifnull(nextlength7, 0) + ifnull(nextlength8, 0) + ifnull(nextlength9, 0) + ifnull(nextlength10, 0) + ifnull(nextlength11, 0) + ifnull(nextlength12, 0) + ifnull(nextlength13, 0) + ifnull(nextlength14, 0) + ifnull(nextlength15, 0)AS TotalLength ,TIME('08:35', '+' || (length + ifnull(nextlength, 0) + ifnull(nextlength, 0) + ifnull(nextlength2, 0) + ifnull(nextlength3, 0) + ifnull(nextlength4, 0) + ifnull(nextlength5, 0) + ifnull(nextlength6, 0) + ifnull(nextlength7, 0) + ifnull(nextlength8, 0) + ifnull(nextlength9, 0) + ifnull(nextlength10, 0) + ifnull(nextlength11, 0) + ifnull(nextlength12, 0) + ifnull(nextlength13, 0) + ifnull(nextlength14, 0) + ifnull(nextlength15, 0)) || ' seconds') AS EstimatedTime FROM ( SELECT Title ,Description ,length ,Sequence ,lag(length, 1) OVER ( ORDER BY Sequence) AS nextlength ,lag(length, 2) OVER ( ORDER BY Sequence ) AS nextlength2 ,lag(length, 3) OVER ( ORDER BY Sequence ) AS nextlength3 ,lag(length, 4) OVER ( ORDER BY Sequence ) AS nextlength4 ,lag(length, 5) OVER ( ORDER BY Sequence ) AS nextlength5 ,lag(length, 6) OVER ( ORDER BY Sequence ) AS nextlength6 ,lag(length, 7) OVER ( ORDER BY Sequence ) AS nextlength7 ,lag(length, 8) OVER ( ORDER BY Sequence ) AS nextlength8 ,lag(length, 9) OVER ( ORDER BY Sequence ) AS nextlength9 ,lag(length, 10) OVER ( ORDER BY Sequence ) AS nextlength10 ,lag(length, 11) OVER ( ORDER BY Sequence ) AS nextlength11 ,lag(length, 12) OVER ( ORDER BY Sequence ) AS nextlength12 ,lag(length, 13) OVER ( ORDER BY Sequence ) AS nextlength13 ,lag(length, 14) OVER ( ORDER BY Sequence ) AS nextlength14 ,lag(length, 15) OVER ( ORDER BY Sequence ) AS nextlength15 FROM PlanningCenterItems WHERE Service_Position = 'during' AND Item_Type != 'header' AND (RelatedPlan) = ( SELECT MAX(RelatedPlan) FROM PlanningCenterItems ) ) ORDER BY Sequence ASC ) "):
        serviceItems.append(row[0])
    
    return str('\n'.join(map(str,serviceItems)))

def getPreService():
    serviceItems = []
    for row in connectionCursor.execute("SELECT ifnull(Title || ' | ' || Description || '(' || EstimatedTime || ')', title || ' (' || EstimatedTime || ')') AS Item FROM ( SELECT Title ,Description ,length ,Sequence ,length + ifnull(nextlength, 0) + ifnull(nextlength, 0) + ifnull(nextlength2, 0) + ifnull(nextlength3, 0) + ifnull(nextlength4, 0) + ifnull(nextlength5, 0) + ifnull(nextlength6, 0) + ifnull(nextlength7, 0) + ifnull(nextlength8, 0) + ifnull(nextlength9, 0) + ifnull(nextlength10, 0) + ifnull(nextlength11, 0) + ifnull(nextlength12, 0) + ifnull(nextlength13, 0) + ifnull(nextlength14, 0) + ifnull(nextlength15, 0)AS TotalLength ,TIME('08:35', '+' || (length + ifnull(nextlength, 0) + ifnull(nextlength, 0) + ifnull(nextlength2, 0) + ifnull(nextlength3, 0) + ifnull(nextlength4, 0) + ifnull(nextlength5, 0) + ifnull(nextlength6, 0) + ifnull(nextlength7, 0) + ifnull(nextlength8, 0) + ifnull(nextlength9, 0) + ifnull(nextlength10, 0) + ifnull(nextlength11, 0) + ifnull(nextlength12, 0) + ifnull(nextlength13, 0) + ifnull(nextlength14, 0) + ifnull(nextlength15, 0)) || ' seconds') AS EstimatedTime FROM ( SELECT Title ,Description ,length ,Sequence ,lag(length, 1) OVER ( ORDER BY Sequence) AS nextlength ,lag(length, 2) OVER ( ORDER BY Sequence ) AS nextlength2 ,lag(length, 3) OVER ( ORDER BY Sequence ) AS nextlength3 ,lag(length, 4) OVER ( ORDER BY Sequence ) AS nextlength4 ,lag(length, 5) OVER ( ORDER BY Sequence ) AS nextlength5 ,lag(length, 6) OVER ( ORDER BY Sequence ) AS nextlength6 ,lag(length, 7) OVER ( ORDER BY Sequence ) AS nextlength7 ,lag(length, 8) OVER ( ORDER BY Sequence ) AS nextlength8 ,lag(length, 9) OVER ( ORDER BY Sequence ) AS nextlength9 ,lag(length, 10) OVER ( ORDER BY Sequence ) AS nextlength10 ,lag(length, 11) OVER ( ORDER BY Sequence ) AS nextlength11 ,lag(length, 12) OVER ( ORDER BY Sequence ) AS nextlength12 ,lag(length, 13) OVER ( ORDER BY Sequence ) AS nextlength13 ,lag(length, 14) OVER ( ORDER BY Sequence ) AS nextlength14 ,lag(length, 15) OVER ( ORDER BY Sequence ) AS nextlength15 FROM PlanningCenterItems WHERE Service_Position = 'pre' AND Item_Type != 'header' AND (RelatedPlan) = ( SELECT MAX(RelatedPlan) FROM PlanningCenterItems ) ) ORDER BY Sequence ASC ) "):
        serviceItems.append(row[0])
    
    return str('\n'.join(map(str,serviceItems)))

sendEmail.sendMail(getPreService(),getServiceOrder())
sendGroupme.send(getServiceOrder())
pprint(getServiceOrder())